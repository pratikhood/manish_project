<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="phood" failures="0" tests="8" name="Dashboard Page Test" time="65.925" errors="0" timestamp="02 Jul 2020 11:33:36 GMT">
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="65.875">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: window was already closed
  (Session info: chrome=83.0.4103.116)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;PHOOD&amp;apos;, ip: &amp;apos;192.168.43.166&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;14.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Pratik Hood\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:50986}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 884440c5eb37146a08a7ee6b2dd44a4a
*** Element info: {Using=xpath, value=//button[@id=&amp;apos;unblocked-allow&amp;apos;]}">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: window was already closed  (Session info: chrome=83.0.4103.116)Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'System info: host: 'PHOOD', ip: '192.168.43.166', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'Driver info: org.openqa.selenium.chrome.ChromeDriverCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.116, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Pratik Hood\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:50986}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}Session ID: 884440c5eb37146a08a7ee6b2dd44a4a*** Element info: {Using=xpath, value=//button[@id='unblocked-allow']}at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)at org.openqa.selenium.By$ByXPath.findElement(By.java:353)at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)at com.sun.proxy.$Proxy14.click(Unknown Source)at com.product.qa.pages.LoginPage.login(LoginPage.java:89)at com.product.qa.testcases.DashboardPageTest.setUp(DashboardPageTest.java:29)... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="courseCountTest" time="0.0">
    <skipped/>
  </testcase> <!-- courseCountTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="BlogsCountTest" time="0.0">
    <skipped/>
  </testcase> <!-- BlogsCountTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="EventsCountTest" time="0.0">
    <skipped/>
  </testcase> <!-- EventsCountTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="resumeButtonTest" time="0.0">
    <skipped/>
  </testcase> <!-- resumeButtonTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="LearnigPathLabelTest" time="0.0">
    <skipped/>
  </testcase> <!-- LearnigPathLabelTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="BlogsLabelTest" time="0.0">
    <skipped/>
  </testcase> <!-- BlogsLabelTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="BlogsOpenTest" time="0.0">
    <skipped/>
  </testcase> <!-- BlogsOpenTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="BlogsViewAllBtnTest" time="0.0">
    <skipped/>
  </testcase> <!-- BlogsViewAllBtnTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="EventViewAllBtnTest" time="0.0">
    <ignored/>
  </testcase> <!-- EventViewAllBtnTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="verifyEventOpenTest" time="0.0">
    <ignored/>
  </testcase> <!-- verifyEventOpenTest -->
  <testcase classname="com.product.qa.testcases.DashboardPageTest" name="upcomingEventLabelTest" time="0.0">
    <ignored/>
  </testcase> <!-- upcomingEventLabelTest -->
</testsuite> <!-- Dashboard Page Test -->
